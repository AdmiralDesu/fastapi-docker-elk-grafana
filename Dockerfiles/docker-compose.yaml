services:
  minio:
    container_name: "minio"
    build:
      context: .
      dockerfile: Dockerfile.minio
    env_file:
      - ./env_files/.env_minio.env
    entrypoint: ["/opt/app/entrypoint_minio.sh"]
    ports:
      - "9000:9000"
      - "9001:9001"
    restart: always
    volumes:
      - ./volumes/minio:/opt/app/data
    networks:
      - api

  postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    container_name: postgres
    env_file:
      - ./env_files/.env_postgres.env
    volumes:
       - ./volumes/postgres/data:/opt/app/data
    ports:
      - "5432:5432"
    networks:
      - api
    restart: always


  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4:8.11
    restart: always
    env_file:
      - ./env_files/.env_pgadmin.env
    ports:
      - "5050:80"
    volumes:
      - ./volumes/pgadmin:/var/lib/pgadmin
    networks:
      - api
    depends_on:
      - postgres

  redis:
    container_name: redis
    image: redis/redis-stack:latest
    restart: always
    env_file:
      - ./env_files/.env_redis.env
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - ./volumes/redis/:/data
networks:
  api:
    driver: bridge